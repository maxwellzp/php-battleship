name: Battleship CI
on:
  pull_request:
    types:
      - opened
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
env:
  APP_ENV: test
jobs:
  validate-composer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
      - run: composer validate --strict --no-check-all --no-check-publish

  unit-tests:
    needs: validate-composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov
      - uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      - run: composer install --prefer-dist --no-progress
      - run: php ./vendor/bin/phpunit --testsuite Unit

  integration-tests:
    env:
      DATABASE_URL: "postgresql://tester_user:password@127.0.0.1:5432/battleship?serverVersion=16&charset=utf8"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: battleship
          POSTGRES_PASSWORD: password
          POSTGRES_USER: tester_user
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo_pgsql
      - uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      - run: composer install --prefer-dist --no-progress
      - name: Test PostgreSQL connection
        run: PGPASSWORD=password psql -h localhost -U tester_user -d battleship -c "SELECT 1"
      - run: |
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:schema:create --env=test
      - name: Run integration tests
        run: php ./vendor/bin/phpunit --testsuite Integration
      - name: Debug information
        if: ${{ failure() && steps.create-database.outcome == 'failure' }}
        run: |
          php -m
          php -v
          echo "Database creation step failed"
          php -m | grep pdo_pgsql

  build:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
      - run: composer install --prefer-dist --no-progress
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        uses: ./.github/actions/cached-deps
      - name: Build assets
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: 'public/build'


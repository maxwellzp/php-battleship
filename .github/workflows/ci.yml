name: Battleship CI
on:
  pull_request:
    types:
      - opened
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
env:
  APP_ENV: test
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Show App environment variable
        run: echo "Application working in ${{ env.APP_ENV }}"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: PHP version
        run: php -v
      - name: Composer version
        run: composer --version
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
            path: /tmp/composer-cache
            key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --prefer-dist
      - name: Run Unit tests
        run: php ./vendor/bin/phpunit --testsuite Unit
  integration-tests:
    env:
      DATABASE_URL: "postgresql://tester_user:password@127.0.0.1:5432/battleship?serverVersion=16&charset=utf8"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: battleship
          POSTGRES_PASSWORD: password
          POSTGRES_USER: tester_user
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Show App environment variable
        run: echo "Application working in ${{ env.APP_ENV }}"
      - name: Database URL environment variable
        run: echo "Application connected to DB ${{ env.DATABASE_URL }}"
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: PHP version
        run: php -v
      - name: Composer version
        run: composer --version
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --prefer-dist
      - name: Create database schema
        id: create-database
        run: |
            php bin/console doctrine:database:create --if-not-exists --env=test
            php bin/console doctrine:schema:create --env=test
      - name: Display information
        if: ${{ failure() && steps.create-database.outcome == 'failure' }}
        run: |
          php -m
          php -v
          echo "Database creation step failed"
          php -m | grep pdo_pgsql
      - name: Run integration tests
        run: php ./vendor/bin/phpunit --testsuite Integration
  build:
#    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        uses: ./.github/actions/cached-deps
      - name: Build assets
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: 'public/build'

